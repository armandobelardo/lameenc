image:
- Visual Studio 2019

configuration:
- Release

platform:
- x64

environment:
  PYPIPASSWORD:
    secure: 0xp7fTZZa86PgcNIu+uwzw==
  matrix:
  - arch: Win64
  - arch:

clone_folder: c:\lameenc

init:
- set arch19="-AWin32"
- if "%arch%"=="Win64" ( set arch19="-Ax64" )

install:
- set pyarch=
- if "%arch%"=="Win64" ( set pyarch=-x64)
- set PATH=C:\Python35%pyarch%;C:\Python36%pyarch%;C:\Python37%pyarch%;C:\Python38%pyarch%;C:\Python39%pyarch%;C:\Python310%pyarch%;%PATH%
- copy C:\Python35%pyarch%\python.exe C:\Python35%pyarch%\python3.5.exe
- copy C:\Python36%pyarch%\python.exe C:\Python35%pyarch%\python3.6.exe
- copy C:\Python37%pyarch%\python.exe C:\Python35%pyarch%\python3.7.exe
- copy C:\Python38%pyarch%\python.exe C:\Python35%pyarch%\python3.8.exe
- copy C:\Python39%pyarch%\python.exe C:\Python35%pyarch%\python3.9.exe
- copy C:\Python310%pyarch%\python.exe C:\Python35%pyarch%\python3.10.exe
- C:\Python310%pyarch%\python.exe -m pip install --upgrade setuptools wheel twine

before_build:
- cmd: |-
    if exist build ( rmdir /s /q build )
    mkdir build
    cd build
    cmake .. -G "Visual Studio 16 2019" %arch19%

build_script:
  - cmake --build . --config Release

artifacts:
  - path: '**/*.lib'
    name: Libraries
  - path: '**/*.whl'
    name: Python Wheels

on_failure:
  - appveyor PushArtifact lame\src\lame\lib\libmp3lame.lib

on_success:
  - IF "%APPVEYOR_REPO_TAG%" == "true" ( FOR /F %%f IN ('DIR /B c:\lameenc\build\*.whl') do C:\Python310%pyarch%\python.exe -m twine upload -u chrisstaite -p %PYPIPASSWORD% -r pypi %%f )
